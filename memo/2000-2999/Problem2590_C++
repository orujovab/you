#include <iostream>
#include <cstring>
#include <queue>

using namespace std;

int main(){
	int n, count = 0;
	bool **marked, **asteroid;
	cin >> n;
	marked = new bool*[n + 2];
	for (int i = 0; i < n + 2; ++i){
		marked[i] = new bool[n + 2];
		memset(marked[i], 0, (n + 2) * sizeof(bool));
	}
	asteroid = new bool*[n + 2];
	for (int i = 0; i < n + 2; ++i){
		asteroid[i] = new bool[n + 2];
		memset(asteroid[i], 0, (n + 2) * sizeof(bool));
	}
	char c;
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= n; ++j){
			cin >> c;
			if (c == '*') asteroid[i][j] = true;
		}

	int ai, aj;
	queue<int> q;
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= n; ++j)
			if (!marked[i][j] && asteroid[i][j]){
				q.push(i);
				q.push(j);
				marked[i][j] = true;
				while (!q.empty()){
					ai = q.front(); q.pop();
					aj = q.front(); q.pop();
					for (int di = -1; di <= 1; ++di)
						for (int dj = di == 0 ? -1 : 0; dj <= 1; dj += 2)
							if (!marked[ai + di][aj + dj] && asteroid[ai + di][aj + dj]){
								marked[ai + di][aj + dj] = true;
								q.push(ai + di);
								q.push(aj + dj);
							}
				}
				count += 1;
			}

	cout << count << endl;
}
