#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;

#define max 100001


int ans[max], ID[max], u[max], v[max], set[max];
bool del[max];

void init(int n)
{
	for (int i = 0; i <= n; i++) set[i] = i;
}

int find(int a)
{
	int temp, root = a;
	while (set[root] != root) root = set[root];
	while (set[a] != root)
	{
		temp = a;
		a = set[a];
		set[temp] = root;
	}
	return root;
}

bool merge(int a, int b)
{
	int x = find(a), y = find(b);
	if (x == y) return false;
	set[x] = y;
	return true;
}

int main()
{
	int n, m, q;
	while (~scanf("%d%d", &n, &m))
	{
		for (int i = 1; i <= m; i++) scanf("%d%d", &u[i], &v[i]);
		scanf("%d", &q);
		memset(del, 0, sizeof del);
		for (int i = 0; i < q; i++)
		{
			scanf("%d", &ID[i]);
			del[ID[i]] = 1;
		}
		int cnt = n;
		init(n);
		for (int i = 1; i <= m; i++)
		{
			if (del[i]) continue;
			if (find(u[i]) == find(v[i])) continue;
			cnt--;
			merge(find(u[i]), find(v[i]));
		}
		for (int i = q - 1; i >= 0; i--)
		{
			int id = ID[i], uu = u[id], vv = v[id];
			ans[i] = cnt;
			if (find(uu) != find(vv))
			{
				merge(find(uu), find(vv));
				cnt--;
			}
		}
		for (int i = 0; i < q; i++) printf("%d ", ans[i]);
		printf("\n");
	}
	return 0;
}
