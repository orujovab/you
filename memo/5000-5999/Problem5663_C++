#include <iostream>
#include <hash_map>

using namespace std;
using __gnu_cxx::hash_map;

const int maxn = 3001;
hash_map<int, int> mymap;
hash_map<int, int >::iterator ix;

int main()
{
	int n, a[maxn];
	short dp[maxn][maxn];
	bool first = 1;
	while (cin >> n){
		if (!first) puts("");
		first = 0;
		for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
		for (int i = 1; i <= n; i++){
			for (int j = i + 1; j <= n; j++) dp[i][j] = 1;
		}
		mymap.clear();
		int top = 0, low = a[1], high = 0;
		for (int i = n; i >= 1; i--){
			for (int j = 1; j<i; j++){
				int k = a[i] + a[j];
				ix = mymap.find(k);
				if (ix != mymap.end()){
					dp[j][i] = dp[i][ix->second] + 1;
					if (dp[j][i]>top){
						top = dp[j][i];
						low = j;
						high = i;
					}
				}
			}
			mymap[a[i]] = i;
		}
		if (n == 1){ printf("1\n%d\n", a[1]); }
		else if (n == 2) { printf("2\n%d %d\n", a[1], a[2]);  continue; }
		if (top == 0){ printf("2\n%d %d\n", a[1], a[2]); }
		else
		{
			printf("%d\n", top + 1);
			printf("%d", a[low]);
			int q1 = a[low], q2 = a[high];
			for (int i = 0; i < top; i++){  // when top=4  sum of numbers is 5
				printf(" %d", q2);
				int t = q1;
				q1 = q2;
				q2 = t + q2;
			}
			puts("");
		}
	}
	return 0;
}
