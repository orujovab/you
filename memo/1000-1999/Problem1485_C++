#include <cstdio>
#include <cstring>

using namespace std;

int mod, n, k;

struct mat
{
	int x, y, m[33][33];
}a, e, zero;

struct mat2_of_mat
{
	mat a, b, c, d;
}m, t;

void debug(mat o)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++) printf("%d ", o.m[i][j]);
		printf("\n");
	}
}

mat mul_mat(mat a, mat b)
{
	mat temp;
	memset(&temp, 0, sizeof(temp));
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			for (int k = 0; k < n; k++) temp.m[i][j] += a.m[i][k] * b.m[k][j] % mod;
		}
	}
	return temp;
}

mat plus_mat(mat a, mat b)
{
	mat temp;
	memset(&temp, 0, sizeof(temp));
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++) temp.m[i][j] = (a.m[i][j] + b.m[i][j]) % mod;
	}
	return temp;
}

mat2_of_mat mul_mat2_of_mat(mat2_of_mat x, mat2_of_mat y)
{
	mat2_of_mat temp;
	memset(&temp, 0, sizeof(temp));
	temp.a = plus_mat(mul_mat(x.a, y.a), mul_mat(x.b, y.c));
	temp.b = plus_mat(mul_mat(x.a, y.b), x.b);
	temp.c = zero;
	temp.d = e;
	return temp;
}

int main()
{
	scanf("%d%d%d", &n, &k, &mod);
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++) scanf("%d", &a.m[i][j]);
	}
	memset(&zero, 0, sizeof(zero));
	memset(&e, 0, sizeof(e));
	for (int i = 0; i < n; i++) e.m[i][i] = 1;
	a.x = a.y = e.x = e.y = zero.x = zero.y = n;
	t.a = a; t.b = e; t.c = zero;	t.d = e; m = t;
	t.a = e; t.b = zero;
	k++;
	while (k) //quick power
	{
		if (k & 1) t = mul_mat2_of_mat(t, m);
		m = mul_mat2_of_mat(m, m);
		k >>= 1;
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (i == j) printf("%d ", (t.b.m[i][j] - 1 + mod) % mod);
			else printf("%d ", t.b.m[i][j]);
		}
		printf("\n");
	}
	return 0;
}
