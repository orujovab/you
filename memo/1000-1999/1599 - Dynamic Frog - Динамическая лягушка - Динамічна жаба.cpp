#include <iostream>
#include <string.h>

using namespace std;

int main() {
	int i, n, d, s, ptr, dist, tests, m[201];
	char letter;
	scanf("%d\n", &tests);
	for (int t = 1; t <= tests; t++)
	{
		scanf("%d %d\n", &n, &d);
		memset(m, -1, sizeof m);

		//Левый берег представляем одним большим камнем, который заменяем на два маленьких.
		m[0] = m[1] = 0;

		//Считываем информацию про камни и заполняем массив m. Каждый большой
		//камень заносим в массив дважды, маленький – только один раз.
		for (ptr = 2, i = 0; i < n; i++)
		{
			do {
				scanf("%c", &letter);
			} while (letter == ' ');
			scanf("-%d", &s);
			if (letter == 'B') { m[ptr] = m[ptr + 1] = s; ptr += 2; }
			else { m[ptr] = s; ptr++; }
		}
		//Правый берег представляем одним большим камнем, который заменяем на два маленьких.
		m[ptr] = m[ptr + 1] = d;
		ptr++;
		scanf("\n");

		//Движемся с самого левого камня до самого правого, перепрыгивая через
		//один. Ищем максимум разностей между i-ым и (i + 1)-ым камнями.
		for (dist = 0, i = 2; i < ptr; i += 2)
			if (m[i] - m[i - 2] > dist) dist = m[i] - m[i - 2];

		//Уменьшаем значение i на 1. Теперь движемся справа налево по соседним камням, которые имеют
		//нечетные номера (камни с четными номерами утонули при движении лягушки на правый берег).
		for (i--; i >= 2; i -= 2)
			if (m[i] - m[i - 2] > dist) dist = m[i] - m[i - 2];

		printf("Case %d: %d\n", t, dist);
	}
	return 0;
}
