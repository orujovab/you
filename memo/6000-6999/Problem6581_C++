#include <iostream>
#include <string>

using namespace std;

const int maxn = 101;
int t, a[maxn * 37], f[maxn * 37], g1[maxn][maxn], g2[maxn][maxn];
bool v[maxn * 37];
char c[maxn][maxn];

struct nodd
{
	int y, d, n;
} b[8000];

void add(int x, int y)
{
	b[++t].y = y;
	b[t].n = a[x];
	a[x] = t;
}

bool dfs(int t)
{
	for (int p = a[t]; p; p = b[p].n) if (v[b[p].y]) {
		v[b[p].y] = 0;
		if (!f[b[p].y] || dfs(f[b[p].y])) {
			f[b[p].y] = t;
			return 1;
		}
	}
	return 0;
}

int main()
{
	int n, n1, n2;
	while (cin >> n) {
		for (int i = 1; i <= n; ++i) scanf("%s", c[i] + 1);
		n1 = n2 = t = 0;
		for (int i = 1; i <= n; ++i)
			for (int j = 1; j <= n; ++j)
				if (c[i][j] == '.') g1[i][j] = c[i][j] != c[i][j - 1] ? ++n1 : g1[i][j - 1];

		for (int j = 1; j <= n; ++j)
			for (int i = 1; i <= n; ++i)
				if (c[i][j] == '.') g2[i][j] = c[i][j] != c[i - 1][j] ? ++n2 : g2[i - 1][j];

		for (int i = 1; i <= n1; ++i) a[i] = 0;
		for (int i = 1; i <= n2; ++i) f[i] = 0;
		for (int i = 1; i <= n; ++i)
			for (int j = 1; j <= n; ++j)
				if (c[i][j] == '.') add(g1[i][j], g2[i][j]);

		int ans = 0;
		for (int i = 1; i <= n1; ++i) {
			for (int j = 1; j <= n2; ++j) v[j] = 1;
			ans += dfs(i);
		}
		printf("%d\n", ans);
	}
	return 0;
}
