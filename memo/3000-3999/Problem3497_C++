#include <string.h>
#include <stdio.h>
#include <algorithm>

using namespace std;

int main()
{
	int V, n, item[65], min_cap[101], max_cap[101], dp[1000001];
	bool in_item[65];
	while (scanf("%d%d", &V, &n) == 2)
	{
		int sz = 0;
		memset(in_item, false, sizeof(in_item));
		int tem_min = 0x7fffffff;
		V *= 1000;
		bool ok = false;
		if (V == 0) ok = true;
		for (int i = 1; i <= n; ++i)
		{
			scanf("%d%d", min_cap + i, max_cap + i);
			if (ok) continue;
			tem_min = min(min_cap[i], tem_min);
			for (int j = min_cap[i]; j <= max_cap[i]; ++j)
			{
				if (V%j == 0)
				{
					ok = true;
					break;
				}
				if (!in_item[j])
				{
					item[sz++] = j;
					in_item[j] = true;
				}
			}
		}
		if (ok)
		{
			printf("0\n");
			continue;
		}
		memset(dp, 0, sizeof(dp));
		if (V > 1000000) V = V - tem_min*(1 + (V - 1000000) / tem_min);
		for (int i = 0; i < sz; ++i)
		{
			int w = item[i];
			for (int j = w; j <= V; ++j) if (dp[j - w] + w > dp[j]) dp[j] = dp[j - w] + w;
		}
		printf("%d\n", V - dp[V]);
	}
}
