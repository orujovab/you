#include <iostream>
#include <string.h>

using namespace std;

int findset(int x, int *fa) { return fa[x] == -1 ? x : fa[x] = findset(fa[x], fa); }

int bind(int i, int j, int *f)
{
	int fa = findset(i, f), fb = findset(j, f);
	if (fa != fb) { f[fa] = fb; return 1; }
	return 0;
}

int main()
{
	int n, m, k, u, v, fa_1[1001], fa_2[1001];
	char s[10];
	while (scanf("%d%d%d", &n, &m, &k) == 3 && n)
	{
		memset(fa_1, -1, sizeof fa_1);
		memset(fa_2, -1, sizeof fa_2);
		int c1 = 0, c2 = 0;
		while (m--)
		{
			scanf("%s%d%d", s, &u, &v);
			if (s[0] == 'B') c1 += bind(u, v, fa_1);
			else if (s[0] == 'R') c2 += bind(u, v, fa_2);
		}
		if (n - 1 - c2 <= k && k <= c1) printf("1\n");
		else printf("0\n");
	}
	return 0;
}
