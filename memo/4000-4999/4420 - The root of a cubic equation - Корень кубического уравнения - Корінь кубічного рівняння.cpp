#include <iostream>
#include <algorithm>

using namespace std;

double a, b, c, d, l, r, x;

//Объявим функцию, вычисляющую кубический многочлен.
double f(double x)
{
	return a*x*x*x + b*x*x + c*x + d;
}

int main() {
	scanf("%lf %lf %lf %lf", &a, &b, &c, &d);
	//Находим границы [l; r], в которых лежит искомый корень. Положим
	//изначально r = 1. Будем последовательно увеличивать r в два раза,
	//пока искомый корень не будет находиться в промежутке [-r; r]
	//(для этого необходимо, чтобы функция f(x) принимала противоположные по
	//знаку значения на концах интервала). После чего положим l = -r.
	r = 1;
	while (f(r) * f(-r) >= 0) r *= 2;
	l = -r;
	//При помощи бинарного поиска ищем корень уравнения f(x) = 0 на промежутке [l; r].
	while (r - l > 1e-12)
	{
		x = (l + r) / 2;
		if (f(x) * f(r) > 0) r = x;
		else l = x;
	}
	printf("%.9lf\n", l);
	return 0;
}
