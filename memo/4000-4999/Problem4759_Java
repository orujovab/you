import java.util.ArrayList;
import java.util.Scanner;

public class Main {

  static interface Exxecutor { Long perform(long n, int i); }

  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    ArrayList<Integer> ls = new ArrayList<Integer>();

    while(in.hasNextInt()) ls.add(in.nextInt());

    print(doPerform(ls, new Exxecutor() {
      @Override
      public Long perform(long n, int i) { return n*n; }
    }));

    print(doPerform(ls, new Exxecutor() {
      @Override
      public Long perform(long n, int i) { return n % 11; }
    }));

    print(doPerform(ls, new Exxecutor() {
      @Override
      public Long perform(long n, int i) { return n%2 == 0 ? n : null; }
    }));

    print(doPerform(ls, new Exxecutor() {
      @Override
      public Long perform(long n, int i) { return String.valueOf(n).length()%2 == 1 ? n : null; }
    }));

    print(doPerform(ls, new Exxecutor() {
      @Override
      public Long perform(long n, int i) {
        String s = String.valueOf(n);
        return s.length() == 2 ? Long.parseLong(s+s) : null;
      }
    }));

    print(doPerform(ls, new Exxecutor() {
      @Override
      public Long perform(long n, int i) { return i%3 > 0 ? n : null; }
    }));
  }

  private static ArrayList<Long> doPerform(ArrayList<Integer>ls, Exxecutor e) {
    ArrayList<Long> res = new ArrayList<Long>();
    for(int i=0, l=ls.size();  i<l; i++) {
      Long j = e.perform(ls.get(i), i);
      if (j != null) res.add(j);
    }
    return res;
  }

  private static void print(ArrayList<Long> ls) {
    StringBuilder sb = new StringBuilder();
    sb.append('[');
    for(int i=0, l=ls.size(); i<l; i++) {
      sb.append(ls.get(i));
      if(i < l-1) sb.append(", ");
    }
    sb.append(']');
    System.out.println(sb.toString());
  }
}
