#include <iostream>
#include <string.h>

using namespace std;

int t, n, no[7], up[7];
bool used[7];

struct six
{
	int a[6], pos[7];
};

six a[7];

int getup(int x)
{
	if (x == 0) return a[no[x]].pos[1];
	int edge = a[no[0]].a[(up[0] + x - 1) % 6];
	int pose = a[no[x]].pos[edge];
	int pedge = (x + 2) % 6;
	return (pose - pedge + 6) % 6;
}

bool gank(int x)
{
	if (x < 2) return false;
	if (a[no[x]].a[(up[x] + x + 3) % 6] != a[no[x - 1]].a[(up[x - 1] + x) % 6]) return true;
	if (x == 6 && a[no[x]].a[(up[x] + 1) % 6] != a[no[1]].a[(up[1] + 4) % 6]) return true;
	return false;
}

bool dfs(int x)
{
	if (x == 7) return true;
	for (int i = 0; i < 7; i++)
		if (!used[i])
		{
			no[x] = i;
			up[x] = getup(x);
			if (gank(x)) continue;
			used[i] = true;
			if (dfs(x + 1)) return true;
			used[i] = false;
		}
	return false;
}

int main()
{
	int i, j, x;
	scanf("%d", &n);
	for (t = 1; t <= n; t++)
	{
		for (i = 0; i < 7; i++)
			for (j = 0; j < 6; j++)
			{
				scanf("%d", &x);
				a[i].a[j] = x;
				a[i].pos[x] = j;
			}

		memset(used, false, sizeof used);
		printf("Case %d:", t);
		if (dfs(0))
		{
			for (i = 0; i < 7; i++) printf(" %d", no[i]);
			puts("");
		}
		else printf(" No solution\n");
	}
	return 0;
}
