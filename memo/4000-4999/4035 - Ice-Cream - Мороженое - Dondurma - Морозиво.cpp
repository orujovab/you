#include <iostream>

using namespace std;

#define MAX 10001
#define INF 1000000000

int i, k, n, Left, Right, m[MAX];

//Функция Check проверяет, можно ли рассадить продавцов мороженого по ларькам так, чтобы
//расстояние между ними было не меньше Value. Сделать это можно так. Садим первого продавца
//в первый ларек. Далее ищем ларек, который находится от первого на расстоянии, не меньшем
//Value. Садим в него второго продавца. И так далее, пока не рассадим всех продавцов. В
//переменной stall подсчитываем количество ларьков, в которые удалось посадить продавцов.
//Если рассадить k мороженщиков по ларькам не удастся(stall < k), то функция Check возвращает 0 (иначе 1).
int Check(int Value)
{
	int i, stall = 1, len = 0;
	for (i = 1; i < n; i++)
	{
		len += m[i] - m[i - 1];
		if (len >= Value) len = 0, stall++;
	}
	return stall >= k;
}

int main() {
	scanf("%d %d", &n, &k);
	for (i = 0; i < n; i++) scanf("%d", &m[i]);

	//Поскольку k < n, то всегда существует такое расстояние между соседними ларьками, при
	//котором можно рассадить мороженщиков по ларькам. Пусть искомое минимальное расстояние
	//находится в промежутке [Left; Right], изначально представляя собой интервал[0; 10^9].
	Left = 0; Right = INF;
	while (Left <= Right)
	{
		int Middle = (Left + Right) / 2;
		if (Check(Middle)) Left = Middle + 1;
		else Right = Middle - 1;
	}
	printf("%d\n", Left - 1);
	return 0;
}
